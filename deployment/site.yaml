- hosts: loadbalancers
  become: true
  tasks:
    - name: Install certificates
      ansible.builtin.copy:
        src: exerge.pem
        dest: /etc/ssl/exerge.pem
        mode: '0600'

    - name: Install HAProxy # HAProxy
      ansible.builtin.apt:
        name: haproxy

    - name: Configure HAProxy
      ansible.builtin.template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
        mode: '0644'
      notify:
        - Restart HAProxy

  handlers:
    - name: Restart HAProxy
      ansible.builtin.service:
        name: haproxy
        state: restarted


- hosts: dbservers
  become: true
  tasks:
    - name: Install MongoDB package signing key # MongoDB
      ansible.builtin.apt_key:
        url: https://www.mongodb.org/static/pgp/server-4.4.asc
        state: present

    - name: Install MongoDB repository
      ansible.builtin.apt_repository:
        repo: deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse
        state: present
        filename: mongodb-org-4.4

    - name: Install MongoDB
      ansible.builtin.apt:
        name: mongodb-org
        update_cache: true

    - name: Start MongoDB
      ansible.builtin.systemd: state=started name=mongod daemon_reload=yes

    - name: Create admin user # User setup
      community.mongodb.mongodb_user:
        db: admin
        name: admin
        pass: "{{ mongodb_admin_password }}"
        state: present
        roles: root

    - name: Create user
      community.mongodb.mongodb_user:
        login_user: admin
        login_password: "{{ mongodb_admin_password }}"
        database: "{{ mongodb_database }}"
        name: "{{ mongodb_user }}"
        pass: "{{ mongodb_password }}"
        roles:
          - db: "admin"
            role: "readWrite"
          - db: "{{ mongodb_database }}"
            role: "readWrite"

    - name: Install NodeSource package signing key # Node
      ansible.builtin.apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Install NodeSource repository
      ansible.builtin.apt_repository:
        repo: deb https://deb.nodesource.com/node_16.x {{ ansible_lsb.codename }} main
        state: present
        filename: nodesource

    - name: Install NodeSource-src repository
      ansible.builtin.apt_repository:
        repo: deb-src https://deb.nodesource.com/node_16.x {{ ansible_lsb.codename }} main
        state: present
        filename: nodesource-src

    - name: Install Node.js (urK)
      ansible.builtin.apt:
        name: nodejs
        update_cache: true

    - name: Enable corepack
      ansible.builtin.command: corepack enable
      changed_when: false

    - name: Install Redis # Redis
      ansible.builtin.apt:
        name: redis-server

    - name: Configure Redis
      ansible.builtin.template:
        src: redis.conf.j2
        dest: /etc/redis/redis.conf
        mode: '0644'
      notify:
        - Restart Redis

    - name: Download simulator # Project
      become: false
      ansible.builtin.git:
        repo: https://github.com/chrfin-4/M7011E.git
        dest: /home/ubuntu/exerge
        depth: 1
        force: true
      register: simulator_repo

    - name: Deploy environment file
      ansible.builtin.template:
        src: envs_simulator.j2
        dest: "{{ repo_dest }}/simulator/.env"
        mode: '0644'
      become: false
      register: simulator_env

    - name: Yarn install
      community.general.yarn:
        path: "{{ repo_dest }}/simulator"
      become: false

    - name: Install simulator in systemd
      ansible.builtin.template:
        src: simulator.service.j2
        dest: /etc/systemd/system/exerge_sim.service
        mode: '0644'

    - name: Start server
      ansible.builtin.systemd:
        state: restarted
        name: exerge_web
        daemon_reload: true

  handlers:
    - name: Restart Redis
      ansible.builtin.service:
        name: redis
        state: restarted


- hosts: webservers
  become: true
  tasks:
    - name: Install nginx # Nginx
      ansible.builtin.apt:
        name: nginx

    - name: Configure nginx
      ansible.builtin.template:
        src: nginx-site.cfg.j2
        dest: /etc/nginx/sites-available/default
        mode: '0644'
      notify:
        - Restart Nginx

    - name: Install NodeSource package signing key # Node
      ansible.builtin.apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Install NodeSource repository
      ansible.builtin.apt_repository:
        repo: deb https://deb.nodesource.com/node_16.x {{ ansible_lsb.codename }} main
        state: present
        filename: nodesource

    - name: Install NodeSource-src repository
      ansible.builtin.apt_repository:
        repo: deb-src https://deb.nodesource.com/node_16.x {{ ansible_lsb.codename }} main
        state: present
        filename: nodesource-src

    - name: Install Node.js (urK)
      ansible.builtin.apt:
        name: nodejs
        update_cache: true

    - name: Enable corepack
      ansible.builtin.command: corepack enable
      changed_when: false

    - name: Download application # Project
      become: false
      ansible.builtin.git:
        repo: https://github.com/chrfin-4/M7011E.git
        dest: /home/ubuntu/exerge
        depth: 1
        force: true

    - name: Deploy server environment file
      ansible.builtin.template:
        src: envs_server.j2
        dest: "{{ repo_dest }}/server/.env"
        mode: '0644'
      become: false
      register: server_env

    - name: Deploy web environment file
      ansible.builtin.template:
        src: envs_web.j2
        dest: "{{ repo_dest }}/web/.env.local"
        mode: '0644'
      become: false
      register: web_env

    - name: Yarn install server
      become: false
      community.general.yarn:
        path: "{{ repo_dest }}/server"

    - name: Yarn install web
      become: false
      community.general.yarn:
        path: "{{ repo_dest }}/web"

    - name: Build frontend
      become: false
      ansible.builtin.command: yarn --cwd {{ repo_dest }}/web build
      register: yarn_build
      changed_when: yarn_build.rc == 0

    - name: Install server in systemd
      ansible.builtin.template:
        src: server.service.j2
        dest: /etc/systemd/system/exerge.service
        mode: '0644'

    - name: Install webapp in systemd
      ansible.builtin.template:
        src: webapp.service.j2
        dest: /etc/systemd/system/exerge_web.service
        mode: '0644'

    - name: Start server
      ansible.builtin.systemd:
        state: restarted
        name: exerge
        daemon_reload: true

    - name: Start webapp
      ansible.builtin.systemd:
        state: restarted
        name: exerge_web
        daemon_reload: true

  handlers:
    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
