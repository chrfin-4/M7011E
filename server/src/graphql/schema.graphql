type Query {
  users: [User!]!
  user(id: ID!): User

  login(email: String!, password: String!): User
  me: User
}

type Mutation {
  createUser(userInput: UserInput): User
}

type User {
  _id: ID
  email: String!
  password: String
  type: Int!
  prosumerData: ProsumerData
  managerData: ManagerData
}

type ProsumerData {
  banned: Boolean!
  houseId: Int!
}

type ManagerData {
  powerplants: [Powerplant!]
}

type Powerplant {
  powerplantId: String!
  name: String!
}

input UserInput {
  email: String!
  password: String!
  type: String!
  prosumerData: ProsumerInput
  managerData: PowerplantInput
}

input ProsumerInput {
  banned: Boolean
  houseId: Int!
}

input PowerplantInput {
  powerplandId: String!
  name: String!
}
